package com.solace.covidaftereffect;import androidx.annotation.NonNull;import androidx.appcompat.app.ActionBarDrawerToggle;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.core.view.GravityCompat;import androidx.drawerlayout.widget.DrawerLayout;import androidx.fragment.app.Fragment;import android.content.Intent;import android.graphics.Color;import android.os.Bundle;import android.view.MenuItem;import android.view.View;import android.widget.TextView;import android.widget.Toast;import com.google.android.gms.auth.api.signin.GoogleSignIn;import com.google.android.gms.auth.api.signin.GoogleSignInAccount;import com.google.android.gms.auth.api.signin.GoogleSignInClient;import com.google.android.gms.auth.api.signin.GoogleSignInOptions;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.android.material.navigation.NavigationView;import com.google.firebase.auth.FirebaseAuth;import java.util.ArrayList;public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {    private TextView userName,userEmail;    private DrawerLayout drawerLayout;    View view;    private boolean isLoggingOut = false;    GoogleSignInClient mGoogleSignInClient;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        NavigationView  navigationView = findViewById(R.id.nav_view);        navigationView.setNavigationItemSelectedListener(this);        view=navigationView.getHeaderView(0);        drawerLayout = findViewById(R.id.drawer_layout);        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this,drawerLayout,toolbar,R.string.navigation_drawer_open,R.string.navigation_drawer_close);        drawerLayout.addDrawerListener(toggle);        toggle.syncState();        userEmail=view.findViewById(R.id.nav_emaleid);        userName=view.findViewById(R.id.nav_username);        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)                .requestEmail()                .build();        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);       // chart=findViewById(R.id.chartbar);    /*    BarData data = new BarData(getDataSet(Color.rgb(115,115,115),4,6,"Low","lowSet"),                getDataSet(Color.rgb(71,209,71),3,44,"Normal","normalSet"),                getDataSet(Color.rgb(255,204,0),2,44,"High","highSet"),                getDataSet(Color.rgb(255,51,0),1,6,"Very High","veryHighSet"));*//*        chart.setData(data);        chart.setDragEnabled(true); // on by default        //chart.setVisibleXRange(0,3); // sets the viewport to show 3 bars        chart.animateXY(2000, 2000);        chart.invalidate();*/        GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(this);        if (account != null)        {        String username=account.getDisplayName();        String useremailid=account.getEmail();        userName.setText(username);        userEmail.setText(useremailid);        String userid  = account.getId();        }        //setData(3,10);        if (savedInstanceState==null)        {            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new HomeActivitivity()).commit();            navigationView.setCheckedItem(R.id.nav_home);        }    }  /*  private BarDataSet getDataSet(int color, float position, float value, String entryLabel, String datasetLabel) {        ArrayList<BarEntry> entries = new ArrayList();        entries.add(new BarEntry(position, value,entryLabel));        BarDataSet dataset = new BarDataSet(entries,datasetLabel);        dataset.setColor(color);        return dataset;    }*/    /*private void setData(int count, int i1) {        ArrayList<BarEntry>  arrayList = new ArrayList<>();        float barwidth=9f;        float spaceforbar=10f;        for (int i=0;i<count;i++)        {            float val=  (float)(Math.random()*i1);            arrayList.add(new BarEntry(i+spaceforbar,val));        }        BarDataSet set;        set=new BarDataSet(arrayList,"Data Set");        BarData data= new BarData(set);        chart.setData(data);    }*/   /* @Override    public void onBackPressed() {        if (drawerLayout.isDrawerOpen(GravityCompat.START))        {            drawerLayout.closeDrawer(GravityCompat.START);        }        else        { super.onBackPressed();        }    }*/    @Override    public boolean onNavigationItemSelected(@NonNull MenuItem item) {        switch(item.getItemId())        {            case R.id.nav_home:                Intent inte = new Intent(MainActivity.this,MainActivity.class);                startActivity(inte);                break;            case R.id.nav_survey:                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new TestDayOne()).commit();                //Toast.makeText(getApplicationContext(), "Caleeds", Toast.LENGTH_SHORT).show();                // Intent intent = new Intent(MainActivity.this,DaysActivity.class);                //  startActivity(intent);                break;            case R.id.nav_logout:                signOut();             /*   mGoogleSignInClient.signOut().addOnCompleteListener(this, new OnCompleteListener<Void>() {                    @Override                    public void onComplete(@NonNull Task<Void> task) {                        Toast.makeText(MainActivity.this, "logout", Toast.LENGTH_SHORT).show();                        Intent intent = new Intent(MainActivity.this,SignInActivity.class);                        startActivity(intent);                        finish();                    }                });*/                //break;        }        drawerLayout.closeDrawer(GravityCompat.START);        return false;    }    private void signOut() {        mGoogleSignInClient.signOut()                .addOnCompleteListener(this, new OnCompleteListener<Void>() {                    @Override                    public void onComplete(@NonNull Task<Void> task) {                        Toast.makeText(MainActivity.this, "logout", Toast.LENGTH_SHORT).show();                        Intent intent = new Intent(MainActivity.this,SignInActivity.class);                        startActivity(intent);                                       }                });    }}